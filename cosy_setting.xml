<application>
  <component name="CosySettings">
    <option name="dedicatedDomainUrl" value="" />
    <option name="localStoragePath" value="C:\Users\yipen\.lingma" />
    <option name="manualOpenLocalModel" value="true" />
    <option name="parameter">
      <ChangeUserSettingParams>
        <option name="allowReportUsage" value="true" />
        <option name="cloud">
          <CloudModelParam>
            <option name="autoTrigger">
              <CloudModelAutoTrigger>
                <option name="enable" value="true" />
                <option name="generateLength" value="level_1" />
                <option name="modelLevel" value="large" />
              </CloudModelAutoTrigger>
            </option>
            <option name="enable" value="true" />
            <option name="manualTrigger">
              <CloudModelManualTrigger>
                <option name="generateLength" value="level_2" />
                <option name="modelLevel" value="large" />
              </CloudModelManualTrigger>
            </option>
            <option name="showInlineWhenIDECompletion" value="true" />
          </CloudModelParam>
        </option>
        <option name="local">
          <LocalModelParam>
            <option name="enable" value="true" />
            <option name="inferenceMode" value="auto" />
            <option name="maxCandidateNum" value="3" />
          </LocalModelParam>
        </option>
      </ChangeUserSettingParams>
    </option>
    <option name="recentQueries">
      <map>
        <entry key="answerer_server|1780516383653258">
          <value>
            <list>
              <option value="Cannot resolve method 'connect' in 'Jsoup'" />
              <option value="引入哪些依赖" />
              <option value="Cannot resolve constructor 'PdfReader(java.io.ByteArrayOutputStream)" />
              <option value="Cannot resolve method 'copyPagesTo(int, int, com.itextpdf.layout.Document)'" />
              <option value="java 爬取网页生成pdf 使用itext7实现" />
              <option value="java 爬取百度网页生成pdf 使用itext7实现" />
              <option value="出现Unsupported pseudo css selector: :-ms-input-placeholder" />
              <option value="出现找不到 chunk-vendors.45c9fe45.css" />
              <option value="css缺失问题怎么解决" />
              <option value="itext7生成pdf" />
              <option value="itext7将html生成pdf" />
              <option value="请确认是否支持itext7" />
              <option value="编译报错" />
              <option value="Cannot resolve method 'addFont(com.itextpdf.kernel.font.PdfFont)'" />
              <option value="Cannot resolve method 'addFont(com.itextpdf.kernel.font.PdfFont)'" />
              <option value="使用了哪个依赖" />
              <option value="使用htmltopdf将url转换pdf" />
              <option value="使用wkhtmltopdf将url转换pdf" />
              <option value="java FlyingSaucer url生成pdf" />
              <option value="依赖有哪些" />
            </list>
          </value>
        </entry>
        <entry key="data-aggregation|1780516383653258">
          <value>
            <list>
              <option value="@灵码 开盲盒" />
              <option value="/explain code" />
            </list>
          </value>
        </entry>
        <entry key="digit-outward-release|1780516383653258">
          <value>
            <list>
              <option value="/explain code" />
              <option value="Files.copy(Paths.get(&quot;d://file//file//18359816a8d4343fa7f577545c883613&quot;), Paths.get(&quot;d://file//file//123.JPG&quot;)); target文件存在导致报错" />
              <option value="Files.copy(Paths.get(&quot;d://file//file//18359816a8d4343fa7f577545c883613&quot;), Paths.get(&quot;d://file//file//123.JPG&quot;),&#10;        StandardCopyOption.REPLACE_EXISTING); source文件不存在报错" />
              <option value="n the near feature `headless: true` will default to the new Headless mode&#10;    for Chrome instead of the old Headless implementation. For more&#10;    information, please see https://developer.chrome.com/articles/new-headless/.&#10;    Consider opting in early by passing `headless: &quot;new&quot;` to `puppeteer.launch()`&#10;    If you encounter any bugs, please report them to https://github.com/puppeteer/puppeteer/issues/new/choose." />
              <option value="Runtime.getRuntime().exec(cmd); 可以传递多少字符" />
              <option value="我用该命令执行nodejs 为什么414后边的字符取不到" />
              <option value="await page.waitForSelector能否根据name进行操作" />
              <option value="await page.waitForSelector 等待最后一个class" />
              <option value="/explain code" />
              <option value="等待文本是 结束节点的元素" />
              <option value="使用waitForFunction来等待某个元素包含特定文本" />
            </list>
          </value>
        </entry>
        <entry key="digit-outward|1780516383653258">
          <value>
            <list>
              <option value="java 调用node.js 并传参" />
              <option value="上述node代码中 ${}代表什么意思" />
              <option value="Stirng 拼接" />
              <option value="String占位符拼接" />
              <option value="/explain code" />
              <option value="java 如何删除文件" />
              <option value="生成一个线程池" />
              <option value="指定线程名称" />
              <option value="@Entity 字段不参与实例化" />
              <option value="abstract 与class的区别" />
              <option value="入参是ArchBaseBean子类对象 入参定义应该怎么写" />
              <option value="/explain code" />
              <option value="&lt;? extends ArchBaseBean&gt; obj" />
              <option value="通过反射获取对象属性值" />
              <option value="通过反射获取对象方法并获取返回值" />
              <option value="创建一个Class&lt;?&gt;[] 空数组" />
              <option value="getDeclaredField 获取不到父级的属性" />
              <option value="通过泛型调用方法" />
              <option value="通过泛型调用方法并获取返回值" />
              <option value="git 提交代码并附带备注" />
            </list>
          </value>
        </entry>
        <entry key="ekp|1780516383653258">
          <value>
            <list>
              <option value="使用java将列表数据导出为pfd" />
              <option value="使用java语言将列表数据导出为pdf" />
              <option value="在上边的基础上生成表单" />
              <option value="生成带有表单的pdf" />
              <option value="java 对象转xml" />
              <option value="哪种耦合性第，便于扩展" />
              <option value="java 对象转xml" />
              <option value="/explain code" />
              <option value="其他参数有什么" />
              <option value="/explain code" />
              <option value="Hibernate生成的sql有错误请找出，并给出解决方法select count(*) as col_0_0_ from bmp_supmdm_main bmpsupmdmm0_ cross join bmp_supmdm_type_first fdvendorty1_ where bmpsupmdmm0_.fd_id=fdvendorty1_.fd_source_id and (lower(.) like ?)" />
              <option value="这是Hibernate自动生成的 需要修改哪些配置？" />
            </list>
          </value>
        </entry>
        <entry key="nodetest|1780516383653258">
          <value>
            <list>
              <option value="nvm install 14.17.6&#10;&#10;Could not retrieve https://nodejs.org/dist/latest/SHASUMS256.txt.&#10;&#10;&#10;Get &quot;https://nodejs.org/dist/latest/SHASUMS256.txt&quot;: dial tcp 104.20.23.46:443: i/o timeout 执行保存" />
              <option value="npm register" />
              <option value="nvm 更改镜像地址" />
              <option value="nvm install 14.17.6&#10;&#10;Could not retrieve https://nodejs.org/dist/latest/SHASUMS256.txt.&#10;&#10;&#10;Get &quot;https://nodejs.org/dist/latest/SHASUMS256.txt&quot;: dial tcp 104.20.23.46:443: i/o timeout" />
              <option value="nvm  安装node" />
              <option value="nvm 查看支持哪些node版本" />
              <option value="&quot;C:\Program Files\nodejs\node.exe&quot; D:\project\vue\nodetest\node1.js&#10;D:\project\vue\nodetest\node_modules\puppeteer-core\lib\cjs\puppeteer\node\BrowserLauncher.js:292&#10;                    throw new Error(`Could not find Chrome (ver. ${this.puppeteer.browserVersion}). This can occur if either\n` +&#10;                          ^&#10;&#10;Error: Could not find Chrome (ver. 128.0.6613.119). This can occur if either" />
              <option value="puppeteer 鉴权" />
              <option value="java 执行node代码并传参" />
              <option value="nodejs打包" />
              <option value="puppeteer linux怎么调用chrome" />
              <option value="'ncc' 不是内部或外部命令，也不是可运行的程序&#10;或批处理文件。" />
              <option value="windows配置环境变量多久生效" />
              <option value="含义" />
              <option value="/explain code" />
              <option value="长度限制" />
              <option value="参数有长度限制吗" />
              <option value="node查看puppetee版本" />
              <option value="查看puppetee是否安装" />
              <option value="查看npm配置信息" />
            </list>
          </value>
        </entry>
        <entry key="simple|1780516383653258">
          <value>
            <list>
              <option value="获取文件大小" />
              <option value="java修改文件后缀名" />
              <option value="设置为与父级同级" />
              <option value="对于集合参数无效" />
              <option value="如何追加text" />
              <option value="Element如何追加text" />
              <option value="Element setText与addText 的区别" />
              <option value="xStream 隐藏属性" />
              <option value="出现&lt;xml.ContentFile&gt; 标签 怎么去除" />
              <option value="有没有更简便点的方法" />
              <option value="java对象转xml的方法有哪些" />
              <option value="哪一个更容易上手" />
              <option value="JAXB 如何使用" />
              <option value="JAXB配合dom4j实例" />
              <option value="XStream 详解" />
              <option value="XStream 注释解释" />
              <option value="@XStreamImplicit如何使用" />
              <option value="修改zip后缀名" />
              <option value="java 修改zip后缀名" />
              <option value="springboot 集成sftp" />
            </list>
          </value>
        </entry>
        <entry key="yjy-model-center|1780516383653258">
          <value>
            <list>
              <option value="/explain code" />
            </list>
          </value>
        </entry>
      </map>
    </option>
    <option name="showCheckReportUsage" value="false" />
    <option name="showInlineAcceptTips" value="false" />
    <option name="showInlineCancelTips" value="false" />
    <option name="showInlineTriggerTips" value="false" />
  </component>
</application>