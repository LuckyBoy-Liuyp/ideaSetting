<application>
  <component name="CosySettings">
    <option name="dedicatedDomainUrl" value="" />
    <option name="localStoragePath" value="C:\Users\yipen\.lingma" />
    <option name="manualOpenLocalModel" value="true" />
    <option name="parameter">
      <ChangeUserSettingParams>
        <option name="allowReportUsage" value="true" />
        <option name="cloud">
          <CloudModelParam>
            <option name="autoTrigger">
              <CloudModelAutoTrigger>
                <option name="enable" value="true" />
                <option name="generateLength" value="level_1" />
                <option name="modelLevel" value="large" />
              </CloudModelAutoTrigger>
            </option>
            <option name="enable" value="true" />
            <option name="manualTrigger">
              <CloudModelManualTrigger>
                <option name="generateLength" value="level_2" />
                <option name="modelLevel" value="large" />
              </CloudModelManualTrigger>
            </option>
            <option name="showInlineWhenIDECompletion" value="true" />
          </CloudModelParam>
        </option>
        <option name="local">
          <LocalModelParam>
            <option name="enable" value="true" />
            <option name="inferenceMode" value="auto" />
            <option name="maxCandidateNum" value="3" />
          </LocalModelParam>
        </option>
      </ChangeUserSettingParams>
    </option>
    <option name="recentComplexQueries">
      <map>
        <entry key="digit-outward-release|1780516383653258">
          <value>
            <list>
              <ChatRecentQuery>
                <option name="chatInputElements">
                  <list>
                    <ChatInputElement>
                      <option name="text" value="将资源文件的创建放到try中还需要额外关闭资源吗" />
                      <option name="type" value="text" />
                    </ChatInputElement>
                  </list>
                </option>
                <option name="contextTags">
                  <list />
                </option>
              </ChatRecentQuery>
            </list>
          </value>
        </entry>
        <entry key="digit-outward|1780516383653258">
          <value>
            <list>
              <ChatRecentQuery>
                <option name="chatInputElements">
                  <list>
                    <ChatInputElement>
                      <option name="text" value="这段代码如何优化" />
                      <option name="type" value="text" />
                    </ChatInputElement>
                  </list>
                </option>
                <option name="contextTags">
                  <list />
                </option>
              </ChatRecentQuery>
              <ChatRecentQuery>
                <option name="chatInputElements">
                  <list>
                    <ChatInputElement>
                      <option name="text" value="优化这段代码" />
                      <option name="type" value="text" />
                    </ChatInputElement>
                  </list>
                </option>
                <option name="contextTags">
                  <list />
                </option>
              </ChatRecentQuery>
              <ChatRecentQuery>
                <option name="chatInputElements">
                  <list>
                    <ChatInputElement>
                      <option name="text" value="ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(zipFilePath));&#10;    //文件名去重&#10;    List&lt;FileDescription&gt; fileList = new ArrayList&lt;&gt;(fileDescriptionList.stream().collect(&#10;            Collectors.toMap(FileDescription::getFileName, Function.identity(), (k1, k2) -&gt; k2))&#10;        .values());&#10;    for (FileDescription fileDescription : fileList) {&#10;      FileInputStream fis = new FileInputStream(fileDescription.getFilePath());&#10;      // 获取源文件的路径和文件名&#10;      Path sourcePath = Paths.get(fileDescription.getFilePath());&#10;      String fileName = sourcePath.getFileName().toString();&#10;&#10;      // 创建ZipEntry并添加到ZipOutputStream&#10;      ZipEntry zipEntry = new ZipEntry(fileName);&#10;      zos.putNextEntry(zipEntry);&#10;&#10;      // 读取源文件并写入到ZipOutputStream&#10;      byte[] buffer = new byte[1024];&#10;      int length;&#10;      while ((length = fis.read(buffer)) &gt; 0) {&#10;        zos.write(buffer, 0, length);&#10;      }&#10;    }&#10;    // 关闭当前的ZipEntry&#10;    zos.closeEntry();&#10;这段代码如何优化" />
                      <option name="type" value="text" />
                    </ChatInputElement>
                  </list>
                </option>
                <option name="contextTags">
                  <list />
                </option>
              </ChatRecentQuery>
              <ChatRecentQuery>
                <option name="chatInputElements">
                  <list>
                    <ChatInputElement>
                      <option name="text" value="文件名增加随机数" />
                      <option name="type" value="text" />
                    </ChatInputElement>
                  </list>
                </option>
                <option name="contextTags">
                  <list />
                </option>
              </ChatRecentQuery>
              <ChatRecentQuery>
                <option name="chatInputElements">
                  <list>
                    <ChatInputElement>
                      <option name="text" value="给现有的文件名增加随机数如：合同扫描.pdf" />
                      <option name="type" value="text" />
                    </ChatInputElement>
                  </list>
                </option>
                <option name="contextTags">
                  <list />
                </option>
              </ChatRecentQuery>
              <ChatRecentQuery>
                <option name="chatInputElements">
                  <list>
                    <ChatInputElement>
                      <option name="text" value="fileName.hashCode() 转换hash为正整数" />
                      <option name="type" value="text" />
                    </ChatInputElement>
                  </list>
                </option>
                <option name="contextTags">
                  <list />
                </option>
              </ChatRecentQuery>
              <ChatRecentQuery>
                <option name="chatInputElements">
                  <list>
                    <ChatInputElement>
                      <option name="text" value="字符串拼接" />
                      <option name="type" value="text" />
                    </ChatInputElement>
                  </list>
                </option>
                <option name="contextTags">
                  <list />
                </option>
              </ChatRecentQuery>
              <ChatRecentQuery>
                <option name="chatInputElements">
                  <list>
                    <ChatInputElement>
                      <option name="text" value="@Column 持久化忽略 &#10; " />
                      <option name="type" value="text" />
                    </ChatInputElement>
                  </list>
                </option>
                <option name="contextTags">
                  <list />
                </option>
              </ChatRecentQuery>
              <ChatRecentQuery>
                <option name="chatInputElements">
                  <list>
                    <ChatInputElement>
                      <option name="text" value=" String archPdfFileName = String.format(&#10;        ArchiveConst.MODEL_CLASS_3.equals(&quot;3&quot;) ? &quot;123&quot;&#10;            : &quot;456&quot;, &quot;-&quot; + &quot;prjStage&quot; + ArchiveConst.ARCHIVE_FILE_TYPE_PDF); 为什么两个值没有进行拼接" />
                      <option name="type" value="text" />
                    </ChatInputElement>
                  </list>
                </option>
                <option name="contextTags">
                  <list />
                </option>
              </ChatRecentQuery>
              <ChatRecentQuery>
                <option name="chatInputElements">
                  <list>
                    <ChatInputElement>
                      <option name="text" value="出现循环依赖" />
                      <option name="type" value="text" />
                    </ChatInputElement>
                  </list>
                </option>
                <option name="contextTags">
                  <list />
                </option>
              </ChatRecentQuery>
              <ChatRecentQuery>
                <option name="chatInputElements">
                  <list>
                    <ChatInputElement>
                      <option name="text" value="java 中 &amp;与&amp;&amp; 的区别" />
                      <option name="type" value="text" />
                    </ChatInputElement>
                  </list>
                </option>
                <option name="contextTags">
                  <list />
                </option>
              </ChatRecentQuery>
              <ChatRecentQuery>
                <option name="chatInputElements">
                  <list>
                    <ChatInputElement>
                      <option name="text" value="在 (projectCatalogueObj.getProId().hashCode() &amp; Integer.MAX_VALUE) &amp;起到什么作用" />
                      <option name="type" value="text" />
                    </ChatInputElement>
                  </list>
                </option>
                <option name="contextTags">
                  <list />
                </option>
              </ChatRecentQuery>
              <ChatRecentQuery>
                <option name="chatInputElements">
                  <list>
                    <ChatInputElement>
                      <option name="text" value="启用  @Async" />
                      <option name="type" value="text" />
                    </ChatInputElement>
                  </list>
                </option>
                <option name="contextTags">
                  <list />
                </option>
              </ChatRecentQuery>
              <ChatRecentQuery>
                <option name="chatInputElements">
                  <list>
                    <ChatInputElement>
                      <option name="text" value="java.lang.IllegalArgumentException: Invalid key: 0&#10;" />
                      <option name="type" value="text" />
                    </ChatInputElement>
                  </list>
                </option>
                <option name="contextTags">
                  <list />
                </option>
              </ChatRecentQuery>
              <ChatRecentQuery>
                <option name="chatInputElements">
                  <list>
                    <ChatInputElement>
                      <option name="text" value="Collectors.tomap&#10;" />
                      <option name="type" value="text" />
                    </ChatInputElement>
                  </list>
                </option>
                <option name="contextTags">
                  <list />
                </option>
              </ChatRecentQuery>
            </list>
          </value>
        </entry>
      </map>
    </option>
    <option name="recentQueries">
      <map>
        <entry key="answerer_server|1780516383653258">
          <value>
            <list>
              <option value="Cannot resolve method 'connect' in 'Jsoup'" />
              <option value="引入哪些依赖" />
              <option value="Cannot resolve constructor 'PdfReader(java.io.ByteArrayOutputStream)" />
              <option value="Cannot resolve method 'copyPagesTo(int, int, com.itextpdf.layout.Document)'" />
              <option value="java 爬取网页生成pdf 使用itext7实现" />
              <option value="java 爬取百度网页生成pdf 使用itext7实现" />
              <option value="出现Unsupported pseudo css selector: :-ms-input-placeholder" />
              <option value="出现找不到 chunk-vendors.45c9fe45.css" />
              <option value="css缺失问题怎么解决" />
              <option value="itext7生成pdf" />
              <option value="itext7将html生成pdf" />
              <option value="请确认是否支持itext7" />
              <option value="编译报错" />
              <option value="Cannot resolve method 'addFont(com.itextpdf.kernel.font.PdfFont)'" />
              <option value="Cannot resolve method 'addFont(com.itextpdf.kernel.font.PdfFont)'" />
              <option value="使用了哪个依赖" />
              <option value="使用htmltopdf将url转换pdf" />
              <option value="使用wkhtmltopdf将url转换pdf" />
              <option value="java FlyingSaucer url生成pdf" />
              <option value="依赖有哪些" />
            </list>
          </value>
        </entry>
        <entry key="data-aggregation|1780516383653258">
          <value>
            <list>
              <option value="@灵码 开盲盒" />
              <option value="/explain code" />
            </list>
          </value>
        </entry>
        <entry key="digit-outward-release|1780516383653258">
          <value>
            <list>
              <option value="n the near feature `headless: true` will default to the new Headless mode&#10;    for Chrome instead of the old Headless implementation. For more&#10;    information, please see https://developer.chrome.com/articles/new-headless/.&#10;    Consider opting in early by passing `headless: &quot;new&quot;` to `puppeteer.launch()`&#10;    If you encounter any bugs, please report them to https://github.com/puppeteer/puppeteer/issues/new/choose." />
              <option value="Runtime.getRuntime().exec(cmd); 可以传递多少字符" />
              <option value="我用该命令执行nodejs 为什么414后边的字符取不到" />
              <option value="await page.waitForSelector能否根据name进行操作" />
              <option value="await page.waitForSelector 等待最后一个class" />
              <option value="/explain code" />
              <option value="等待文本是 结束节点的元素" />
              <option value="使用waitForFunction来等待某个元素包含特定文本" />
              <option value="java字符串去除空格" />
              <option value="Files.copy 出现 文件名过长" />
              <option value="报错：文件名过长" />
              <option value="for continue" />
              <option value="Path 删除文件" />
              <option value="java 本地文件下载" />
              <option value="使用spirngboot 写接口" />
              <option value="获取文件大小" />
              <option value="json转换时为空设置默认值" />
              <option value="使用com.alibaba.fastjson如何实现" />
              <option value="有注解的方式实现俺妈" />
              <option value="有内置好的实现类吗" />
            </list>
          </value>
        </entry>
        <entry key="digit-outward|1780516383653258">
          <value>
            <list>
              <option value="创建一个Class&lt;?&gt;[] 空数组" />
              <option value="getDeclaredField 获取不到父级的属性" />
              <option value="通过泛型调用方法" />
              <option value="通过泛型调用方法并获取返回值" />
              <option value="git 提交代码并附带备注" />
              <option value="clazz.getMethod取不到父类的方法" />
              <option value="流程-项目备案-归档《失败》，原因：java.lang.Class.getModelClass()---" />
              <option value="使用poi-tl生成word表格模版" />
              <option value="Exception in thread &quot;main&quot; java.lang.NoClassDefFoundError: org/apache/commons/io/output/UnsynchronizedByteArrayOutputStream&#10;&#9;at com.deepoove.poi.XWPFTemplate.compile(XWPFTemplate.java:164)&#10;&#9;at com.deepoove.poi.XWPFTemplate.compile(XWPFTemplate.java:132)&#10;&#9;at com.deepoove.poi.XWPFTemplate.compile(XWPFTemplate.java:89)&#10;&#9;at com.deepoove.poi.XWPFTemplate.compile(XWPFTemplate.java:79)&#10;&#9;at com.dcxx.data.ekp.util.WordTableGenerateUtil.main(WordTableGenerateUtil.java:58)&#10;Caused by: java.lang.ClassNotFoundException: org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream&#10;&#9;at java.net.URLClassLoader.findClass(URLClassLoader.java:382)&#10;&#9;at java.lang.ClassLoader.loadClass(ClassLoader.java:424)&#10;&#9;at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)&#10;&#9;at java.lang.ClassLoader.loadClass(ClassLoader.java:357)&#10;&#9;... 5 more" />
              <option value="java.lang.IllegalArgumentException: 不支持：http://javax.xml.XMLConstants/property/accessExternalStylesheet&#10;&#9;at org.apache.xalan.processor.TransformerFactoryImpl.setAttribute(TransformerFactoryImpl.java:574)&#10;&#9;at org.apache.poi.util.XMLHelper.trySet(XMLHelper.java:283)&#10;&#9;at org.apache.poi.util.XMLHelper.getTransformerFactory(XMLHelper.java:224)&#10;&#9;at org.apache.poi.util.XMLHelper.newTransformer(XMLHelper.java:230)&#10;&#9;at org.apache.poi.openxml4j.opc.StreamHelper.saveXmlInStream(StreamHelper.java:56)&#10;&#9;at org.apache.poi.openxml4j.opc.internal.ZipContentTypeManager.saveImpl(ZipContentTypeManager.java:68)&#10;&#9;at org.apache.poi.openxml4j.opc.internal.ContentTypeManager.save(ContentTypeManager.java:450)&#10;&#9;at org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:563)&#10;&#9;at org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1490)&#10;&#9;at org.apache.poi.ooxml.POIXMLDocument.write(POIXMLDocument.java:227)&#10;&#9;at com.deepoove.poi.XWPFTemplate.write(XWPFTemplate.java:235)&#10;&#9;at com.deepoove.poi.XWPFTemplate.writeAndClose(XWPFTemplate.java:246)&#10;&#9;at com.dcxx.data.ekp.util.WordTableGenerateUtil.main(WordTableGenerateUtil.java:63)" />
              <option value="代码中调用springboot项目中的文件" />
              <option value="ResourceUtil.getResource() 获取文件对象" />
              <option value="URL 转File" />
              <option value="Exception in thread &quot;main&quot; java.lang.NullPointerException&#10;&#9;at com.dcxx.data.ekp.util.WordTableGenerateUtil.main(WordTableGenerateUtil.java:58)" />
              <option value="Caused by: java.lang.NoSuchMethodError: org.apache.poi.util.IOUtils.toByteArray(Ljava/io/InputStream;II)[B" />
              <option value="使用poi-tl需要引入什么依赖" />
              <option value="Caused by: java.lang.ClassNotFoundException: org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream" />
              <option value="getClass().getSimpleName() 后边为什么会拼上地址信息" />
              <option value="getClass().getSimpleName() 后边为什么会拼上地址信息  $$EnhancerBySpringCGLIB$$90c680bb" />
              <option value="java字符串截取的方案" />
            </list>
          </value>
        </entry>
        <entry key="ekp|1780516383653258">
          <value>
            <list>
              <option value="list取交集" />
              <option value="java list取交集" />
              <option value="expecting &quot;set&quot;, found 'LEFT' near line 1, column 26" />
              <option value="报错 org.hibernate.hql.internal.ast.QuerySyntaxException: expecting &quot;set&quot;, found 'LEFT' near line 1, column 26" />
              <option value="报错org.hibernate.hql.internal.ast.QuerySyntaxException: expecting &quot;set&quot;, found 'LEFT' near line 1, column 26" />
              <option value="sql EXISTS 解释" />
              <option value="报错org.hibernate.hql.internal.ast.QuerySyntaxException: expecting &quot;set&quot;, found 'LEFT' near line 1, column 26" />
              <option value="转换为mysql存储过程" />
              <option value="hibernate 调用存储过程" />
              <option value="提取为mysql存储过程" />
              <option value="hibernate 如何调用存储过程" />
              <option value="UPDATE bmp_supmdm_main a LEFT JOIN bmp_purmd_review c ON a.fd_id = c.fd_supplier_id AND c.doc_status = '30' AND c.doc_create_time &gt;= DATE_SUB( CURDATE(), INTERVAL 2 YEAR ) &#10;&#9;SET a.fd_sup_grade = '2',&#10;&#9;a.ud_grade_records = CONCAT( IFNULL(a.ud_grade_records,''), '\n', DATE_FORMAT( CURDATE(), '%Y-%m-%d' ), ':供应商两年内未采购从优秀降级为合格' ) ;expecting &quot;set&quot;, found 'LEFT' near line 1, column 26" />
              <option value="hibernate 执行存储过程" />
              <option value="获取返回值" />
              <option value="返回的什么值" />
              <option value="CREATE DEFINER=`lanling_dev`@`%` PROCEDURE `UpdateSupplierGradeForTwoPeriods`()&#10;BEGIN&#10;    -- 在事务块外创建临时表&#10;    CREATE TEMPORARY TABLE IF NOT EXISTS supplier_grade_first_period (&#10;        fd_id VARCHAR(255)&#10;    );&#10;    CREATE TEMPORARY TABLE IF NOT EXISTS supplier_grade_second_period (&#10;        fd_id VARCHAR(255)&#10;    );&#10;    CREATE TEMPORARY TABLE IF NOT EXISTS supplier_grade_intersection (&#10;        fd_id VARCHAR(255)&#10;    );&#10;&#10;    START TRANSACTION;&#10;    &#10;    -- 以下是您的业务逻辑代码&#10;    -- 两年内未发生1次采购的，转为合格供应商。&#10;    UPDATE bmp_supmdm_main a LEFT JOIN bmp_purmd_review c ON a.fd_id = c.fd_supplier_id AND c.doc_status = '30' AND c.doc_create_time &gt;= DATE_SUB( CURDATE(), INTERVAL 2 YEAR ) &#10;    SET a.fd_sup_grade = '2',&#10;    a.ud_grade_records = CONCAT( IFNULL(a.ud_grade_records,''), '\n', DATE_FORMAT( CURDATE(), '%Y-%m-%d' ), ':供应商两年内未采购从优秀降级为合格' ) &#10;    WHERE a.doc_status = '30' AND a.doc_template_id = '181370a34bc6788dce6b3e74d368fdac' AND a.fd_sup_grade = '3' AND c.fd_id IS NULL;&#10;&#10;    -- 插入第一周期的数据&#10;    INSERT INTO supplier_grade_first_period (fd_id)&#10;    SELECT a.fd_id&#10;    FROM bmp_supmdm_main a&#10;    INNER JOIN bmp_purmd_review c ON a.fd_id = c.fd_supplier_id AND c.doc_status = '30' AND c.doc_create_time &gt;= DATE_SUB(CURDATE(), INTERVAL 1 YEAR)&#10;    INNER JOIN bmp_purmd_accep_appr b ON b.fd_cgps_id = c.fd_id AND b.doc_status = '30' AND b.fd_total_point &lt; 85&#10;    WHERE a.doc_status = '30' AND a.doc_template_id = '181370a34bc6788dce6b3e74d368fdac' AND a.fd_sup_grade = '3'&#10;    GROUP BY a.fd_id;&#10;    &#10;    -- 插入第二周期的数据&#10;    INSERT INTO supplier_grade_second_period (fd_id)&#10;    SELECT a.fd_id&#10;    FROM bmp_supmdm_main a&#10;    INNER JOIN bmp_purmd_review c ON a.fd_id = c.fd_supplier_id AND c.doc_status = '30' AND c.doc_create_time BETWEEN DATE_SUB(CURDATE(), INTERVAL 2 YEAR) AND DATE_SUB(CURDATE(), INTERVAL 1 YEAR)&#10;    INNER JOIN bmp_purmd_accep_appr b ON b.fd_cgps_id = c.fd_id AND b.doc_status = '30' AND b.fd_total_point &lt; 85&#10;    WHERE a.doc_status = '30' AND a.doc_template_id = '181370a34bc6788dce6b3e74d368fdac' AND a.fd_sup_grade = '3'&#10;    GROUP BY a.fd_id;&#10;&#10;    INSERT INTO supplier_grade_intersection (fd_id)&#10;    SELECT fp.fd_id&#10;    FROM supplier_grade_first_period fp&#10;    INNER JOIN supplier_grade_second_period sp ON fp.fd_id = sp.fd_id;&#10;&#10;    -- 更新供应商等级&#10;    UPDATE bmp_supmdm_main a&#10;    SET a.fd_sup_grade = '2',&#10;    a.ud_grade_records = CONCAT(IFNULL(a.ud_grade_records,''), '\n', DATE_FORMAT(CURDATE(), '%Y-%m-%d'), ':连续两次周期内综合评价都在85分以下从优秀降级为合格')&#10;    WHERE a.fd_id IN (SELECT fd_id FROM supplier_grade_intersection);&#10;&#9;  -- 返回受影响的行数&#10;    SELECT ROW_COUNT();&#10;    COMMIT;&#10;&#10;    &#10;    -- 删除临时表&#10;    DROP TEMPORARY TABLE supplier_grade_first_period;&#10;    DROP TEMPORARY TABLE supplier_grade_second_period;&#10;    DROP TEMPORARY TABLE supplier_grade_intersection;&#10;END&#10;&#10;&#10;执行存储过程出现Statement violates GTID consistency: CREATE TEMPORARY TABLE and DROP TEMPORARY TABLE can only be executed outside transactional context.  These statements are also not allowed in a function or trigger because functions and triggers are also considered to be multi-statement transactions." />
              <option value="navicat执行可以hibernate执行出现：Statement violates GTID consistency: CREATE TEMPORARY TABLE and DROP TEMPORARY TABLE can only be executed outside transactional context.  These statements are also not allowed in a function or trigger because functions and triggers are also considered to be multi-statement transactions." />
              <option value="js ajax 同步执行" />
              <option value="如何使接口同步执行" />
              <option value="js 函数里ajax success 如何将结果return" />
            </list>
          </value>
        </entry>
        <entry key="nodetest|1780516383653258">
          <value>
            <list>
              <option value="nvm install 14.17.6&#10;&#10;Could not retrieve https://nodejs.org/dist/latest/SHASUMS256.txt.&#10;&#10;&#10;Get &quot;https://nodejs.org/dist/latest/SHASUMS256.txt&quot;: dial tcp 104.20.23.46:443: i/o timeout 执行保存" />
              <option value="npm register" />
              <option value="nvm 更改镜像地址" />
              <option value="nvm install 14.17.6&#10;&#10;Could not retrieve https://nodejs.org/dist/latest/SHASUMS256.txt.&#10;&#10;&#10;Get &quot;https://nodejs.org/dist/latest/SHASUMS256.txt&quot;: dial tcp 104.20.23.46:443: i/o timeout" />
              <option value="nvm  安装node" />
              <option value="nvm 查看支持哪些node版本" />
              <option value="&quot;C:\Program Files\nodejs\node.exe&quot; D:\project\vue\nodetest\node1.js&#10;D:\project\vue\nodetest\node_modules\puppeteer-core\lib\cjs\puppeteer\node\BrowserLauncher.js:292&#10;                    throw new Error(`Could not find Chrome (ver. ${this.puppeteer.browserVersion}). This can occur if either\n` +&#10;                          ^&#10;&#10;Error: Could not find Chrome (ver. 128.0.6613.119). This can occur if either" />
              <option value="puppeteer 鉴权" />
              <option value="java 执行node代码并传参" />
              <option value="nodejs打包" />
              <option value="puppeteer linux怎么调用chrome" />
              <option value="'ncc' 不是内部或外部命令，也不是可运行的程序&#10;或批处理文件。" />
              <option value="windows配置环境变量多久生效" />
              <option value="含义" />
              <option value="/explain code" />
              <option value="长度限制" />
              <option value="参数有长度限制吗" />
              <option value="node查看puppetee版本" />
              <option value="查看puppetee是否安装" />
              <option value="查看npm配置信息" />
            </list>
          </value>
        </entry>
        <entry key="simple|1780516383653258">
          <value>
            <list>
              <option value="获取文件大小" />
              <option value="java修改文件后缀名" />
              <option value="设置为与父级同级" />
              <option value="对于集合参数无效" />
              <option value="如何追加text" />
              <option value="Element如何追加text" />
              <option value="Element setText与addText 的区别" />
              <option value="xStream 隐藏属性" />
              <option value="出现&lt;xml.ContentFile&gt; 标签 怎么去除" />
              <option value="有没有更简便点的方法" />
              <option value="java对象转xml的方法有哪些" />
              <option value="哪一个更容易上手" />
              <option value="JAXB 如何使用" />
              <option value="JAXB配合dom4j实例" />
              <option value="XStream 详解" />
              <option value="XStream 注释解释" />
              <option value="@XStreamImplicit如何使用" />
              <option value="修改zip后缀名" />
              <option value="java 修改zip后缀名" />
              <option value="springboot 集成sftp" />
            </list>
          </value>
        </entry>
        <entry key="yjy-model-center|1780516383653258">
          <value>
            <list>
              <option value="/explain code" />
            </list>
          </value>
        </entry>
      </map>
    </option>
    <option name="showCheckReportUsage" value="false" />
    <option name="showInlineAcceptTips" value="false" />
    <option name="showInlineCancelTips" value="false" />
    <option name="showInlineTriggerTips" value="false" />
  </component>
</application>